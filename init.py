from vk_api.bot_longpoll import VkBotEventType

from functions import *


def get_name():
    user_info = (Auth.vk_session_group.method('users.get', {'user_ids': event.obj.from_id}))
    name = user_info[0]['first_name']
    return str(name)


while True:
    try:
        for event in Auth.longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                response = event.obj.text.lower()
                first_name = get_name()
                if '–ø—Ä–∏–≤–µ—Ç' in response:
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': first_name + ', '
                                                                   + random.choice(privet_answer),
                                                                   'random_id': random.randint(0, 10000000)})
                elif response in ['–ø–æ–∫–∞']:
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': str(first_name) + ', '
                                                                   + random.choice(poka_answer),
                                                                   'random_id': random.randint(0, 10000000)})
                elif ('—Å–ø–æ–∫–∏' in response) or ('—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏' in response):
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': random.choice(spoki_answer_msg)
                                                                   + ', ' + str(first_name),
                                                                   'attachment': random.choice(spoki_answer),
                                                                   'random_id': random.randint(0, 10000000)})
                elif response in ['—Ö–∞–±–∞—Ä —Å–ø–∞—Å–∏–±–æ']:
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': str(first_name) + ', –≠—Ç–æ –º–æ—è —Ä–∞–±–æ—Ç–∞ üòé',
                                                                   'random_id': random.randint(0, 10000000)})
                elif ('üåö' in response) or ('üåù' in response) or \
                        ('üòé' in response) or ('üåñ' in response) or ('üòè' in response):
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': random.choice(smile_answer),
                                                                   'random_id': random.randint(0, 10000000)})
                elif response in ['—Ö–∞–±–∞—Ä –≥–∞–¥–∞–π']:
                    answers = (random.choice(list(open('prinakaz.txt', encoding="utf-8"))))
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': str(first_name) + ', ' + answers,
                                                                   'random_id': random.randint(0, 10000000)})
                elif '—Ö–∞–±–∞—Ä —à–∞—Ä ' in response:
                    lastword = response.replace('—Ö–∞–±–∞—Ä —à–∞—Ä ', '')
                    if str(lastword) not in '':
                        Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                       'message': str(first_name) + ', '
                                                                       + random.choice(shar_answers),
                                                                       'random_id': random.randint(0, 10000000)})
                elif response in ['—Ö–∞–±–∞—Ä –ø–æ–º–æ—â—å']:
                    Auth.vk_session_group.method('messages.send', {'peer_id': event.obj.peer_id,
                                                                   'message': str(first_name) +
                                                                   ', –°—Ç–∞—Ç—å—è —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç',
                                                                   'random_id': random.randint(0, 10000000)})
                elif response in ['—Ö–∞–±–∞—Ä —Ñ–ª–µ–∫—Å']:
                    send_wallpost_things(flex_groups, 1, 1, event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –º—É–¥—Ä–æ—Å—Ç—å']:
                    random_mudrost(event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –∫—Ä–∏–ø–æ—Ç–∞']:
                    random_creepy(event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –º–µ–ª–∞–¥–∑–µ']:
                    get_random_meladze(event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –ø–∞–≤–µ—Ä']:
                    send_wallpost_things(dmc_groups, 1, 1, event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä —Å—ç–π–ª–µ–º', '—Ö–∞–±–∞—Ä —Å–∞–π–ª–µ–º', '—Ö–∞–±–∞—Ä —Å–µ–π–ª–µ–º']:
                    send_wallpost_things(salem_group_id, 1, 1, event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –∂–∏–≤–µ—Ü']:
                    send_wallpost_things(parrot_group_id, 1, 1, event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –∞–Ω–∏–º–µ']:
                    send_wallpost_things(anime_group_id, 1, 1, event, first_name)
                elif response in ['—Ö–∞–±–∞—Ä –≤–∏–Ω–∫—Å']:
                    send_wallpost_things(winx_group_id, 1, 1, event, first_name)
                elif '—Ö–∞–±–∞—Ä —Å–∫–∞–∂–∏ ' in response:
                    habar_say(response, event, first_name)
                elif '—Ö–∞–±–∞—Ä –æ—Ü–µ–Ω–∏ ' in response:
                    habar_oceni(event, first_name)
                elif ('–∞–ª—å—è–Ω—Å' in response) or ('alliance' in response):
                    send_alliance(event, first_name)
                elif '–ø–∏–¥–æ—Ä' in response:
                    vk_session.method('messages.send', {'peer_id': event.obj.peer_id,
                                                        'message': '–°–∞–º –ø–∏–¥–æ—Ä, ' + first_name,
                                                        'random_id': random.randint(0, 10000000)})
                elif response in mbtipidor:
                    vk_session.method('messages.send', {'peer_id': event.obj.peer_id,
                                                        'message': first_name + ', –ê –º–æ–∂–µ—Ç —Ç—ã –ø–∏–¥–æ—Ä ?',
                                                        'random_id': random.randint(0, 10000000)})
    except:
        raise
